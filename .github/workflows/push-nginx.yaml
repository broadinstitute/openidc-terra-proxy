name: Bump, Tag, and Publish
# The purpose of the workflow is to:
#  1. Bump the version number and tag the release if not a PR
#  2. Build docker image and publish to GCR
#
# When run on merge to main, it tags and bumps the patch version by default. You can
# bump other parts of the version by putting #major, #minor, or #patch in your commit
# message.
#
# When run on a PR, it simulates bumping the tag and appends a hash to the pushed image.
#
# The workflow relies on github secrets:
# - GCR_PUBLISH_EMAIL - SA email for publishing to broad-dsp-gcr-public
# - GCR_PUBLISH_KEY_B64 - SA key (Base64-encoded JSON string) for publishing to broad-dsp-gcr-public
# - BROADBOT_TOKEN - the broadbot token, so we can avoid two reviewer rule on GHA operations
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
env:
  # The Google project, which is also the name of the repository for GCR
  GOOGLE_PROJECT: broad-dsp-gcr-public
  # Name of the image to make in the GOOGLE_PROJECT repository
  IMAGE_NAME: ingress-nginx
  # Google Docker repository where the GOOGLE_PROJECT repository can be found
  GOOGLE_DOCKER_REPOSITORY: us.gcr.io
jobs:
  tag-publish-job:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token:  'write'
    steps:
      - name: Checkout current code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_TOKEN }}

      - name: Bump the tag to a new version
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.6
        id: tag
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Auth to Google
        uses: google-github-actions/auth@v1
        with:
          # this value will always be the same so specifying directly
          workload_identity_provider: projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider
          service_account: gcr-publish@broad-dsp-gcr-public.iam.gserviceaccount.com
        
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker $GOOGLE_DOCKER_REPOSITORY --quiet

      - name: Construct docker image name and tag
        id: image-name
        run: |
          DOCKER_TAG=${{ steps.tag.outputs.tag }}
          echo ::set-output name=name::${GOOGLE_DOCKER_REPOSITORY}/${GOOGLE_PROJECT}/${IMAGE_NAME}:${DOCKER_TAG}

      - name: Build image
        run: "docker build -t ${{ steps.image-name.outputs.name }} -f Dockerfile.rancher.nginx ."

      - name: Run Trivy vulnerability scanner
        # From https://github.com/broadinstitute/dsp-appsec-trivy-action
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push image
        run: "docker push ${{ steps.image-name.outputs.name }}"

      - name: Comment pushed image
        uses: actions/github-script@0.3.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.BROADBOT_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: 'Pushed image: ${{ steps.image-name.outputs.name }}' });
  
