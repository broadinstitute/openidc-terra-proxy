ServerAdmin ${SERVER_ADMIN}
ServerName ${SERVER_NAME}
ServerTokens ProductOnly
TraceEnable off

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogLevel ${LOG_LEVEL}

Header unset X-Frame-Options
Header always set X-Frame-Options SAMEORIGIN

ProxyTimeout ${PROXY_TIMEOUT}
LDAPCacheTTL ${LDAP_CACHE_TTL}
LDAPRetries 5
LDAPRetryDelay 1
LDAPConnectionPoolTTL 30

AddType application/x-httpd-php .php

<VirtualHost _default_:${HTTPD_PORT}>
    ErrorLog /dev/stdout
    CustomLog "/dev/stdout" combined
    Redirect 307 / https://${SERVER_NAME}/
</VirtualHost>

<VirtualHost _default_:${SSL_HTTPD_PORT}>

    DocumentRoot /app

    <Directory "/app">
        AllowOverride All
        Options -Indexes

        Order allow,deny
        Allow from all
    </Directory>

    ErrorLog /dev/stdout
    CustomLog "/dev/stdout" combined

    SSLEngine on
    SSLProxyEngine on
    SSLProtocol ${SSL_PROTOCOL}
    SSLCipherSuite ${SSL_CIPHER_SUITE}
    SSLCertificateFile "/etc/ssl/certs/server.crt"
    SSLCertificateKeyFile "/etc/ssl/private/server.key"
    SSLCertificateChainFile "/etc/ssl/certs/ca-bundle.crt"

    <Location ${INTROSPECT_PATH}>
        RewriteEngine off
        Require all granted
        AuthType None
    </Location>

    <LocationMatch "^(?!${INTROSPECT_PATH})(${PROXY_PATH})(.*)">
        Header unset Access-Control-Allow-Origin
        Header always set Access-Control-Allow-Origin "*"
        Header unset Access-Control-Allow-Headers
        Header always set Access-Control-Allow-Headers "authorization,content-type,accept,origin"
        Header unset Access-Control-Allow-Methods
        Header always set Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD"
        Header unset Access-Control-Max-Age
        Header always set Access-Control-Max-Age 1728000

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=204,L]

        <Limit OPTIONS>
            Require all granted
        </Limit>

        ${AUTH_TYPE}
        ${AUTH_LDAP_URL}
        ${AUTH_LDAP_GROUP_ATTR}
        ${AUTH_LDAP_BIND_DN}
        ${AUTH_LDAP_BIND_PASSWORD}
        ${AUTH_REQUIRE}

        <Limit OPTIONS>
            Require all granted
        </Limit>

        ProxyPassMatch ${PROXY_URL}$2
        ProxyPassReverse ${PROXY_URL}

        ${FILTER}
    </LocationMatch>

    <Location ${PROXY_PATH2}>
        Header unset Access-Control-Allow-Origin
        Header always set Access-Control-Allow-Origin "*"
        Header unset Access-Control-Allow-Headers
        Header always set Access-Control-Allow-Headers "authorization,content-type,accept,origin"
        Header unset Access-Control-Allow-Methods
        Header always set Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD"
        Header unset Access-Control-Max-Age
        Header always set Access-Control-Max-Age 1728000

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=204,L]

        <Limit OPTIONS>
            Require all granted
        </Limit>

        ${AUTH_TYPE2}
        <RequireAll>
          <RequireAll>
            ${AUTH_REQUIRE2}
          </RequireAll>
          <RequireAll>
            # Note: we need to reference %{REMOTE_USER} to ensure that this expression is evaluated _after_ the authentication has happened
            # %{REMOTE_USER} != %{REMOTE_USER} will never evaluate to true but will ensure that the expression is evaluated at the correct time
            # An example expression can look like:
            # Require expr "%{REMOTE_USER} != %{REMOTE_USER} || %{HTTP:OAUTH2_CLAIM_email} =~ /.gserviceaccount.com$/"
            Require expr "%{REMOTE_USER} != %{REMOTE_USER} || ('${ENVIRONMENT}' in {'dev', 'alpha', 'perf', 'staging', 'prod'} && (${ALLOW_EXPRESSION}))"
          </RequireAll>
        </RequireAll>

        RequestHeader set oidc_claim_email "expr=%{HTTP:OAUTH2_CLAIM_email}"
        RequestHeader set oidc_claim_user_id "expr=%{HTTP:OAUTH2_CLAIM_sub}"
        RequestHeader set oidc_claim_access_token "expr=%{HTTP:OAUTH2_CLAIM_access_token}"
        RequestHeader set oidc_claim_expires_in "expr=%{HTTP:OAUTH2_CLAIM_exp}"

        ${AUTH_LDAP_URL2}
        ${AUTH_LDAP_GROUP_ATTR2}
        ${AUTH_LDAP_BIND_DN2}
        ${AUTH_LDAP_BIND_PASSWORD2}

        <Limit OPTIONS>
            Require all granted
        </Limit>

        ProxyPass ${PROXY_URL2}
        ProxyPassReverse ${PROXY_URL2}

        ${FILTER2}
    </Location>

    <Location ${PROXY_PATH3}>
        Header unset Access-Control-Allow-Origin
        Header always set Access-Control-Allow-Origin "*"
        Header unset Access-Control-Allow-Headers
        Header always set Access-Control-Allow-Headers "authorization,content-type,accept,origin"
        Header unset Access-Control-Allow-Methods
        Header always set Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD"
        Header unset Access-Control-Max-Age
        Header always set Access-Control-Max-Age 1728000

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=204,L]

        <Limit OPTIONS>
            Require all granted
        </Limit>

        ${AUTH_TYPE3}
        ${AUTH_LDAP_URL3}
        ${AUTH_LDAP_GROUP_ATTR3}
        ${AUTH_LDAP_BIND_DN3}
        ${AUTH_LDAP_BIND_PASSWORD3}
        ${AUTH_REQUIRE3}

        <Limit OPTIONS>
            Require all granted
        </Limit>

        RequestHeader set oidc_claim_email "expr=%{HTTP:OAUTH2_CLAIM_email}"
        RequestHeader set oidc_claim_user_id "expr=%{HTTP:OAUTH2_CLAIM_sub}"
        RequestHeader set oidc_claim_access_token "expr=%{HTTP:OAUTH2_CLAIM_access_token}"
        RequestHeader set oidc_claim_expires_in "expr=%{HTTP:OAUTH2_CLAIM_exp}"

        ProxyPass ${PROXY_URL3}
        ProxyPassReverse ${PROXY_URL3}

        ${FILTER3}
    </Location>

    <Location ${CALLBACK_PATH}>
        AuthType openid-connect
        Require valid-user
    </Location>

</VirtualHost>

# The end
